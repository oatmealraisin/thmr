#!/usr/bin/sh

# TODO: Find a better language to write this in


# Defaults for options
# # #

opt_config=$XDG_CONFIG_HOME/thmr/config
opt_force=0
opt_verbose=0
themeDir=$XDG_CONFIG_HOME/thmr/themes/
Xresources=$XDG_CONFIG_HOME/x/.Xresources


# GetOpts - option handling
# # #

while getopts 'c:d:hlvx:' opt; do
	case $opt in
		c)
			[[ -e $OPTARG ]] \
				|| echo "Cannot find config file: $OPTARG" \
				&& exit 1
			opt_config=$OPTARG
			;;
		# TODO: Use this without being overridden with later sourcing of config
		d)
			[[ -e $OPTARG ]] \
				|| echo "Cannot find default file: $OPTARG" \
				&& exit 1
			thmr_default=$OPTARG
			;;
		f)
			opt_force=1
			;;
		h)
			echo \
'Usage: themer [OPTIONS] THEME

  -c                Specify config file
  -d                Specify a defaults file
  -f                Overwrite any existing files
  -h                Show this help page
  -v                Print verbose output
  -x                Specify an alternate .Xresources' >&2
			exit 0
			;;
		l)
			echo `ls $themeDir`
			exit 0
			;;
		v)
			opt_verbose=1
			;;
		# TODO: Use this without being overridden with later sourcing of config
		x)
			[[ ${opt_force} -eq 1 ]] \
				&& [[ -e $OPTARG ]] \
				&& echo "Warning: $OPTARG already exists.  Override with -f" \
				&& exit 1
			Xresources=$OPTARG
			;;
	esac
done


# Getting our settings straight
# # #

source ${opt_config}
source ${thmr_default}

themeFile=$1

[[ -e $themeFile ]] \
	|| themeFile="$themeDir/$themeFile" \
	&& [[ ${opt_verbose} -eq 1 ]] \
	&& echo "Using theme from $themeDir"

source $themeFile


# Begin thmr output
# # #

# TODO: Work with current Xresources, append changes
# TODO: Fill out ALL Xresources defaults

[[ ${opt_verbose} -eq 1 ]] \
	&& echo "Writing to ${Xresources}"

# TODO: Fix fonts..
# TODO: Update defaults
echo \
'! .Xresources
! Generated by thmr
! https://github.com/oatmealraisin/themer' > $Xresources

if [[ -n $font_name ]]; then
	faceNameString='*faceName        : '"${font_name}"

	[[ -n $font_style ]] \
		&& faceNameString=$faceNameString':style='"$font_style"
	[[ -n $font_size ]] \
		&& faceNameString=$faceNameString':size='"$font_size"

	echo ${faceNameString} >> $Xresources
fi

echo \
'*dynamicColors    : '"$dynamicColors"'
*scrollBar         : '"$scrollBar"'
*termName          : '"$TERM"'
*borderWidth       : '"$borderwidth"'
*allowBoldFonts    : '"$boldFonts"'
*selectToClipboard : '"$clipboard"'
' >> $Xresources

echo "*color0 :      $black"       >> $Xresources
echo "*color1 :      $darkRed"     >> $Xresources
echo "*color2 :      $darkGreen"   >> $Xresources
echo "*color3 :      $darkYellow"  >> $Xresources
echo "*color4 :      $darkBlue"    >> $Xresources
echo "*color5 :      $darkMagenta" >> $Xresources
echo "*color6 :      $darkCyan"    >> $Xresources
echo "*color7 :      $lightGrey"   >> $Xresources
echo "*color8 :      $darkGrey"    >> $Xresources
echo "*color9 :      $red"         >> $Xresources
echo "*color10 :     $green"       >> $Xresources
echo "*color11 :     $yellow"      >> $Xresources
echo "*color12 :     $blue"        >> $Xresources
echo "*color13 :     $magenta"     >> $Xresources
echo "*color14 :     $cyan"        >> $Xresources
echo "*color15 :     $white"       >> $Xresources
echo "*colorBD :     $colorbd"     >> $Xresources
echo "*colorIT :     $colorit"     >> $Xresources
echo "*colorUL :     $colorul"     >> $Xresources
echo "*foreground :  $fore"        >> $Xresources
echo "*background :  $back"        >> $Xresources
echo "*cursorColor : $curs"        >> $Xresources

xrdb -merge $Xresources

# TODO: Does not work because of flags
#[[ -x $wpcall ]] \
#	|| echo "$wpcall not installed." \
#	&& exit

[[ -e $wallpaper ]] \
	&& $wpcall $wallpaper \
	|| echo "Could not find wallpaper $wallpaper"
